version: '3.8'

services:
    backend:
        container_name: "pfartists_back_${ENV_MODE}"
        image: "pfartists_back_${ENV_MODE}:0.1.0"
        environment:
            - NODE_ENV=${ENV_MODE}
            - USER=${USER}
            - GROUP=${GROUP}
        depends_on:
            - db
        links:
            - db
        build:
            context: ./backend
            dockerfile: Dockerfile.${ENV_MODE}
        ports:
            - ${BACKEND_PORT}:${BACKEND_PORT}
        networks: 
            - net
        volumes:
            - ./backend:/usr/src/app
            - /usr/src/app/node_modules
        restart: unless-stopped
        healthcheck:
            test: ["CMD-SHELL", "pg_isready"]
            interval: 10s
            timeout: 5s
            retries: 5

    db:
        container_name: db
        image: postgres:12.12-bullseye
        networks:
            - net
        environment:
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - POSTGRES_DB=${POSTGRES_DB_NAME}
        volumes:
            - PG_DATA:/var/lib/postgresql/data
        ports:
        - "127.0.0.1:${POSTGRES_DB_PORT}:${POSTGRES_DB_PORT}"
        restart: always

    pgadmin:
        links:
            - db
        container_name: pgadmin
        image: dpage/pgadmin4:6.12
        volumes:
            - ./pgdata/pgadmin:/root/.pgadmin
        environment:
            - PGADMIN_DEFAULT_EMAIL=${PGA_DEF_EMAIL}
            - PGADMIN_DEFAULT_PASSWORD=${PGA_DEF_PASS}
        networks:
            - net

    nginx:
        container_name: nginx
        image: nginx:1.23.1
        volumes:
            - ./nginx/templates:/etc/nginx/templates
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
        environment:
            - NGINX_PORT=${NGINX_PORT}
            - BACKEND_PORT=${BACKEND_PORT}
        ports:
            - 80:${NGINX_PORT}
        depends_on:
            - backend
            - db
        networks:
            - net
networks:
    net:

volumes:
    PG_DATA:
        driver: local
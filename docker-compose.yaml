version: '3.8'

services:
    backend:
        container_name: "pfartists_back_${NOTE_ENV:-dev}"
        image: "pfartists_back_${NOTE_ENV:-dev}:1.0.0"
        environment:
            - NODE_ENV=${NODE_ENV:-dev}
        depends_on:
            - db
        build:
            context: ./backend
            target: "${NODE_ENV:-dev}"
            dockerfile: Dockerfile
        entrypoint: ["./wait-for-postgres.sh", "yarn", "start:${NODE_ENV:-dev}"]
        ports:
            - ${BACKEND_PORT:-3001}:${BACKEND_PORT:-3001}
        networks: 
            - net
        volumes:
            - ./backend:/usr/src/app
            - /usr/src/app/node_modules
        restart: unless-stopped

    db:
        container_name: db
        image: postgres:12.12-bullseye
        networks:
            - net
        environment:
            - POSTGRES_PASSWORD=$POSTGRES_PASSWORD:-"adminpass12"
            - POSTGRES_USER=$POSTGRES_USER:-postgres
            - POSTGRES_DB="${POSTGRES_DB_PREFIX:-db}_${POSTGRES_DB_NAME:-pfartists_local}"
            - PG_DATA=/var/lib/postgresql/data
        ports:
        - ${POSTGRES_DB_PORT:-5432}:${POSTGRES_DB_PORT:-5432}
        restart: always

    pgadmin:
        links:
            - db:db
        container_name: pgadmin
        image: dpage/pgadmin4:6.12
        volumes:
            - ./pgdata/pgadmin:/root/.pgadmin
        environment:
            - PGADMIN_DEFAULT_EMAIL=${DEF_EMAIL:-admin@admin.com}
            - PGADMIN_DEFAULT_PASSWORD=${DEF_PASS:-pasword}
        networks:
            - net

    nginx:
        container_name: nginx
        image: nginx:1.23.1
        volumes:
            - ./nginx/templates:/etc/nginx/templates
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
        environment:
            - NGINX_PORT=${NGINX_PORT:-80}
            - BACKEND_PORT=${BACKEND_PORT:-3001}
        ports:
            - 80:${NGINX_PORT:-80}
        depends_on:
            - backend
            - db
        networks:
            - net
networks:
    net: